/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Java_Files;

import com.opencsv.CSVWriter;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.URI;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aashna Shrestha, Rabina Shrestha, Subriti Aryal
 */
public class MusicAcademyInfo extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public MusicAcademyInfo() {
        initComponents();
        loginAdmin_jPanel.setVisible(false);
        loginMember_jPanel.setVisible(false);
        registerMember_jPanel.setVisible(false);
        instrumentMain_jPanel.setVisible(false);
        back_jButton.setVisible(false);
        adminAddInstruments_jPanel.setVisible(false);
        adminBack_jButton.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchBy_jButton = new javax.swing.ButtonGroup();
        main_jPanel = new javax.swing.JPanel();
        academyName_jlabel = new javax.swing.JLabel();
        academyAddress_jlabel = new javax.swing.JLabel();
        home_jPanel = new javax.swing.JPanel();
        academyImage_jLabel = new javax.swing.JLabel();
        users_jPanel = new javax.swing.JPanel();
        admin_jButton = new javax.swing.JButton();
        member_jButton = new javax.swing.JButton();
        newAccount_jLabel = new javax.swing.JLabel();
        registerMember_jButton = new javax.swing.JButton();
        loginAdmin_jPanel = new javax.swing.JPanel();
        adminLogin_jButton = new javax.swing.JButton();
        adminName_jLabel = new javax.swing.JLabel();
        adminName_jTextField = new javax.swing.JTextField();
        adminPassword_jLabel = new javax.swing.JLabel();
        admin_jPasswordField = new javax.swing.JPasswordField();
        backAdmin_jButton = new javax.swing.JButton();
        loginMember_jPanel = new javax.swing.JPanel();
        memberLogin_jButton = new javax.swing.JButton();
        memberName_jLabel = new javax.swing.JLabel();
        memberName_jTextField = new javax.swing.JTextField();
        memberPassword_jLabel = new javax.swing.JLabel();
        member_jPasswordField = new javax.swing.JPasswordField();
        backMember_jButton = new javax.swing.JButton();
        description_jTextArea = new javax.swing.JTextArea();
        registerMember_jPanel = new javax.swing.JPanel();
        registration_jLabel = new javax.swing.JLabel();
        name_jLabel = new javax.swing.JLabel();
        name_jTextField = new javax.swing.JTextField();
        specialization_jLabel = new javax.swing.JLabel();
        specialization_jTextField = new javax.swing.JTextField();
        age_jLabel = new javax.swing.JLabel();
        age_jTextField = new javax.swing.JTextField();
        username_jLabel = new javax.swing.JLabel();
        username_jTextField = new javax.swing.JTextField();
        password_jLabel = new javax.swing.JLabel();
        password_jPasswordField = new javax.swing.JPasswordField();
        rePassword_jLabel = new javax.swing.JLabel();
        repassword_jPasswordField = new javax.swing.JPasswordField();
        submit_jButton = new javax.swing.JButton();
        registered_jScrollPane = new javax.swing.JScrollPane();
        memberInfo_jTable = new javax.swing.JTable();
        clearRegistration_jButton = new javax.swing.JButton();
        backRegistration_jButton = new javax.swing.JButton();
        backgroundImage_jLabel = new javax.swing.JLabel();
        instrument_jPanel = new javax.swing.JPanel();
        instrumentMain_jPanel = new javax.swing.JPanel();
        instruments_jLabel = new javax.swing.JLabel();
        searchBy_jLabel = new javax.swing.JLabel();
        instrumentTable_jScrollPane = new javax.swing.JScrollPane();
        instrument_jTable = new javax.swing.JTable();
        category_jRadioButton = new javax.swing.JRadioButton();
        categorySearch_jLabel = new javax.swing.JLabel();
        category_jComboBox = new javax.swing.JComboBox<>();
        searchCategory_jButton = new javax.swing.JButton();
        price_jRadioButton = new javax.swing.JRadioButton();
        priceSearch_jLabel = new javax.swing.JLabel();
        searchPrice_jTextField = new javax.swing.JTextField();
        searchPrice_jButton = new javax.swing.JButton();
        instrumentImage_jPanel = new javax.swing.JPanel();
        guitar_jLabel = new javax.swing.JLabel();
        drums_jLabel = new javax.swing.JLabel();
        violin_jLabel = new javax.swing.JLabel();
        mic_jLabel = new javax.swing.JLabel();
        piano_jLabel = new javax.swing.JLabel();
        flute_jLabel = new javax.swing.JLabel();
        back_jButton = new javax.swing.JButton();
        instrumentBgImage_jLabel = new javax.swing.JLabel();
        adminAddInstruments_jPanel = new javax.swing.JPanel();
        addInstrument_jPanel = new javax.swing.JPanel();
        adminInstrument_jLabel = new javax.swing.JLabel();
        instrumentID_jLabel = new javax.swing.JLabel();
        instrumentID_jTextField = new javax.swing.JTextField();
        instrument_jLabel = new javax.swing.JLabel();
        instrument_jTextField = new javax.swing.JTextField();
        modelNo_jLabel = new javax.swing.JLabel();
        modelNo_jTextField = new javax.swing.JTextField();
        warranty_jLabel = new javax.swing.JLabel();
        warranty_jTextField = new javax.swing.JTextField();
        price_jLabel = new javax.swing.JLabel();
        price_jTextField = new javax.swing.JTextField();
        brand_jLabel = new javax.swing.JLabel();
        brand_jTextField = new javax.swing.JTextField();
        add_jButton = new javax.swing.JButton();
        add_jScrollPane = new javax.swing.JScrollPane();
        add_jTable = new javax.swing.JTable();
        clearAddInstruments_jButton = new javax.swing.JButton();
        instrumentImage_jPanel1 = new javax.swing.JPanel();
        addGuitar_jLabel = new javax.swing.JLabel();
        addDrums_jLabel = new javax.swing.JLabel();
        addViolin_jLabel = new javax.swing.JLabel();
        addMic_jLabel = new javax.swing.JLabel();
        addPiano_jLabel = new javax.swing.JLabel();
        addFlute_jLabel = new javax.swing.JLabel();
        adminBack_jButton = new javax.swing.JButton();
        addBgImage_jLabel = new javax.swing.JLabel();
        fileHelp_jMenuBar = new javax.swing.JMenuBar();
        file_jMenu = new javax.swing.JMenu();
        open_jMenu = new javax.swing.JMenu();
        instruments_jMenuItem = new javax.swing.JMenuItem();
        external_jMenuItem = new javax.swing.JMenuItem();
        exit_jMenuItem = new javax.swing.JMenuItem();
        help_jMenu = new javax.swing.JMenu();
        user_jMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Symphony Academy of Music.");
        setBackground(new java.awt.Color(230, 244, 254));
        setBounds(new java.awt.Rectangle(390, 180, 0, 0));
        setIconImages(null);
        setPreferredSize(new java.awt.Dimension(750, 530));
        setResizable(false);
        setSize(new java.awt.Dimension(750, 530));

        main_jPanel.setBackground(new java.awt.Color(230, 244, 254));
        main_jPanel.setLayout(null);

        academyName_jlabel.setFont(new java.awt.Font("Pristina", 1, 36)); // NOI18N
        academyName_jlabel.setForeground(new java.awt.Color(164, 164, 245));
        academyName_jlabel.setText("Symphony Academy of Music.");
        main_jPanel.add(academyName_jlabel);
        academyName_jlabel.setBounds(170, 30, 400, 44);

        academyAddress_jlabel.setFont(new java.awt.Font("Sitka Display", 0, 14)); // NOI18N
        academyAddress_jlabel.setForeground(new java.awt.Color(102, 204, 255));
        academyAddress_jlabel.setText("Kamalpokhari, Kathmandu, Nepal.");
        academyAddress_jlabel.setIconTextGap(0);
        academyAddress_jlabel.setMaximumSize(new java.awt.Dimension(0, 0));
        main_jPanel.add(academyAddress_jlabel);
        academyAddress_jlabel.setBounds(270, 80, 290, 18);

        home_jPanel.setBackground(new java.awt.Color(230, 244, 254));
        home_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, new java.awt.Color(26, 175, 247)));
        home_jPanel.setForeground(new java.awt.Color(255, 255, 255));

        academyImage_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/music.png"))); // NOI18N

        users_jPanel.setBackground(new java.awt.Color(64, 132, 173));
        users_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, new java.awt.Color(17, 102, 153)));
        users_jPanel.setToolTipText("");
        users_jPanel.setPreferredSize(new java.awt.Dimension(238, 257));

        admin_jButton.setBackground(new java.awt.Color(190, 190, 253));
        admin_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        admin_jButton.setForeground(new java.awt.Color(51, 120, 156));
        admin_jButton.setText("Admin");
        admin_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_jButtonActionPerformed(evt);
            }
        });

        member_jButton.setBackground(new java.awt.Color(190, 190, 253));
        member_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        member_jButton.setForeground(new java.awt.Color(51, 120, 156));
        member_jButton.setText("Member");
        member_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                member_jButtonActionPerformed(evt);
            }
        });

        newAccount_jLabel.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        newAccount_jLabel.setText("Create new account?");

        registerMember_jButton.setBackground(new java.awt.Color(190, 190, 253));
        registerMember_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        registerMember_jButton.setForeground(new java.awt.Color(51, 120, 156));
        registerMember_jButton.setText("Register");
        registerMember_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerMember_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout users_jPanelLayout = new javax.swing.GroupLayout(users_jPanel);
        users_jPanel.setLayout(users_jPanelLayout);
        users_jPanelLayout.setHorizontalGroup(
            users_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, users_jPanelLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(users_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(users_jPanelLayout.createSequentialGroup()
                        .addComponent(registerMember_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, users_jPanelLayout.createSequentialGroup()
                        .addGroup(users_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(member_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(admin_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29))))
            .addGroup(users_jPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(newAccount_jLabel)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        users_jPanelLayout.setVerticalGroup(
            users_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, users_jPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(admin_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(member_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(newAccount_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerMember_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loginAdmin_jPanel.setBackground(new java.awt.Color(64, 132, 173));
        loginAdmin_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, new java.awt.Color(17, 102, 153)));
        loginAdmin_jPanel.setToolTipText("");
        loginAdmin_jPanel.setPreferredSize(new java.awt.Dimension(238, 257));

        adminLogin_jButton.setBackground(new java.awt.Color(190, 190, 253));
        adminLogin_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        adminLogin_jButton.setForeground(new java.awt.Color(51, 120, 156));
        adminLogin_jButton.setText("Login ");
        adminLogin_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLogin_jButtonActionPerformed(evt);
            }
        });

        adminName_jLabel.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        adminName_jLabel.setText("Username");

        adminPassword_jLabel.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        adminPassword_jLabel.setText("Password");

        backAdmin_jButton.setBackground(new java.awt.Color(166, 206, 229));
        backAdmin_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        backAdmin_jButton.setText("Back");
        backAdmin_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backAdmin_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginAdmin_jPanelLayout = new javax.swing.GroupLayout(loginAdmin_jPanel);
        loginAdmin_jPanel.setLayout(loginAdmin_jPanelLayout);
        loginAdmin_jPanelLayout.setHorizontalGroup(
            loginAdmin_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginAdmin_jPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backAdmin_jButton)
                .addContainerGap())
            .addGroup(loginAdmin_jPanelLayout.createSequentialGroup()
                .addGap(0, 30, Short.MAX_VALUE)
                .addGroup(loginAdmin_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(adminName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminLogin_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(admin_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 31, Short.MAX_VALUE))
            .addGroup(loginAdmin_jPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(adminPassword_jLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginAdmin_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(adminName_jLabel)
                .addGap(85, 85, 85))
        );
        loginAdmin_jPanelLayout.setVerticalGroup(
            loginAdmin_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginAdmin_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(adminName_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(adminPassword_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(admin_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(adminLogin_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backAdmin_jButton)
                .addContainerGap())
        );

        loginMember_jPanel.setBackground(new java.awt.Color(64, 132, 173));
        loginMember_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, new java.awt.Color(17, 102, 153)));
        loginMember_jPanel.setToolTipText("");
        loginMember_jPanel.setPreferredSize(new java.awt.Dimension(238, 257));

        memberLogin_jButton.setBackground(new java.awt.Color(190, 190, 253));
        memberLogin_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        memberLogin_jButton.setForeground(new java.awt.Color(51, 120, 156));
        memberLogin_jButton.setText("Login ");
        memberLogin_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                memberLogin_jButtonActionPerformed(evt);
            }
        });

        memberName_jLabel.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        memberName_jLabel.setText("Username");

        memberPassword_jLabel.setFont(new java.awt.Font("Maiandra GD", 0, 14)); // NOI18N
        memberPassword_jLabel.setText("Password");

        backMember_jButton.setBackground(new java.awt.Color(166, 206, 229));
        backMember_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        backMember_jButton.setText("Back");
        backMember_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMember_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginMember_jPanelLayout = new javax.swing.GroupLayout(loginMember_jPanel);
        loginMember_jPanel.setLayout(loginMember_jPanelLayout);
        loginMember_jPanelLayout.setHorizontalGroup(
            loginMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginMember_jPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(loginMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginMember_jPanelLayout.createSequentialGroup()
                        .addGroup(loginMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(memberName_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                            .addComponent(member_jPasswordField)
                            .addComponent(memberLogin_jButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginMember_jPanelLayout.createSequentialGroup()
                        .addComponent(backMember_jButton)
                        .addContainerGap())))
            .addGroup(loginMember_jPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(loginMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(memberName_jLabel)
                    .addComponent(memberPassword_jLabel))
                .addContainerGap(86, Short.MAX_VALUE))
        );
        loginMember_jPanelLayout.setVerticalGroup(
            loginMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginMember_jPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(memberName_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(memberName_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(memberPassword_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(member_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(memberLogin_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backMember_jButton)
                .addGap(30, 30, 30))
        );

        description_jTextArea.setBackground(new java.awt.Color(230, 244, 254));
        description_jTextArea.setColumns(20);
        description_jTextArea.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        description_jTextArea.setRows(5);
        description_jTextArea.setText(" Music has been transcending language, races and colors for years now. \n It has been one of the languages that could easily break barriers of\n the society into pieces just by its mere existence. Symphony Academy \n of Music has created a platform for artists since 1990’s. Being an\n institution with a long history, it ensures that everyone follows their\n passion and become the greatest of them all.");
        description_jTextArea.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, new java.awt.Color(164, 164, 245)));
        description_jTextArea.setFocusable(false);

        javax.swing.GroupLayout home_jPanelLayout = new javax.swing.GroupLayout(home_jPanel);
        home_jPanel.setLayout(home_jPanelLayout);
        home_jPanelLayout.setHorizontalGroup(
            home_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_jPanelLayout.createSequentialGroup()
                .addGroup(home_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(home_jPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(academyImage_jLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, home_jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(description_jTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(users_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginAdmin_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginMember_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
        );
        home_jPanelLayout.setVerticalGroup(
            home_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(home_jPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(home_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(home_jPanelLayout.createSequentialGroup()
                        .addComponent(academyImage_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(description_jTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(users_jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(loginAdmin_jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                    .addComponent(loginMember_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        main_jPanel.add(home_jPanel);
        home_jPanel.setBounds(27, 137, 680, 300);

        registerMember_jPanel.setBackground(new java.awt.Color(230, 244, 254));
        registerMember_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, new java.awt.Color(26, 175, 247)));
        registerMember_jPanel.setForeground(new java.awt.Color(255, 255, 255));
        registerMember_jPanel.setPreferredSize(new java.awt.Dimension(680, 300));

        registration_jLabel.setFont(new java.awt.Font("Maiandra GD", 1, 20)); // NOI18N
        registration_jLabel.setForeground(new java.awt.Color(64, 132, 173));
        registration_jLabel.setText("Registration");
        registration_jLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        name_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        name_jLabel.setText("Name: ");

        name_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        name_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        specialization_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        specialization_jLabel.setText("Specialization:");

        specialization_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        specialization_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        age_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        age_jLabel.setText("Age:");

        age_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        age_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));
        age_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                age_jTextFieldActionPerformed(evt);
            }
        });

        username_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        username_jLabel.setText("Username:");

        username_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        username_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        password_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        password_jLabel.setText("Password:");

        password_jPasswordField.setBackground(new java.awt.Color(233, 233, 254));
        password_jPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        rePassword_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        rePassword_jLabel.setText("Re-type Password:");

        repassword_jPasswordField.setBackground(new java.awt.Color(233, 233, 254));
        repassword_jPasswordField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        submit_jButton.setBackground(new java.awt.Color(190, 190, 253));
        submit_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        submit_jButton.setForeground(new java.awt.Color(51, 120, 156));
        submit_jButton.setText("Submit");
        submit_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit_jButtonActionPerformed(evt);
            }
        });

        memberInfo_jTable.setBackground(new java.awt.Color(234, 234, 253));
        memberInfo_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Specialization", "Age", "Username", "Password"
            }
        ));
        memberInfo_jTable.setGridColor(new java.awt.Color(203, 228, 255));
        memberInfo_jTable.setSelectionBackground(new java.awt.Color(166, 206, 229));
        memberInfo_jTable.setShowGrid(true);
        registered_jScrollPane.setViewportView(memberInfo_jTable);

        clearRegistration_jButton.setBackground(new java.awt.Color(166, 206, 229));
        clearRegistration_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        clearRegistration_jButton.setText("Clear");
        clearRegistration_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearRegistration_jButtonActionPerformed(evt);
            }
        });

        backRegistration_jButton.setBackground(new java.awt.Color(166, 206, 229));
        backRegistration_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        backRegistration_jButton.setText("Back");
        backRegistration_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backRegistration_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout registerMember_jPanelLayout = new javax.swing.GroupLayout(registerMember_jPanel);
        registerMember_jPanel.setLayout(registerMember_jPanelLayout);
        registerMember_jPanelLayout.setHorizontalGroup(
            registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerMember_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(registered_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(backRegistration_jButton)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerMember_jPanelLayout.createSequentialGroup()
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(registerMember_jPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerMember_jPanelLayout.createSequentialGroup()
                                .addComponent(registration_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(239, 239, 239))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerMember_jPanelLayout.createSequentialGroup()
                                .addComponent(submit_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(201, 201, 201)
                                .addComponent(clearRegistration_jButton))))
                    .addGroup(registerMember_jPanelLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(specialization_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(age_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(name_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(age_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(specialization_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                        .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rePassword_jLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(repassword_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22))
        );
        registerMember_jPanelLayout.setVerticalGroup(
            registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registerMember_jPanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(registration_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(username_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username_jLabel)
                    .addComponent(name_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name_jLabel))
                .addGap(18, 18, 18)
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password_jLabel)
                    .addComponent(specialization_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specialization_jLabel))
                .addGap(18, 18, 18)
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(age_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(age_jLabel)
                    .addComponent(repassword_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rePassword_jLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(submit_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearRegistration_jButton))
                .addGroup(registerMember_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registerMember_jPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backRegistration_jButton)
                        .addContainerGap())
                    .addGroup(registerMember_jPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(registered_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(25, Short.MAX_VALUE))))
        );

        main_jPanel.add(registerMember_jPanel);
        registerMember_jPanel.setBounds(27, 137, 680, 300);

        backgroundImage_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Music Notes.png"))); // NOI18N
        backgroundImage_jLabel.setMinimumSize(new java.awt.Dimension(500, 700));
        backgroundImage_jLabel.setPreferredSize(new java.awt.Dimension(1000, 1080));
        main_jPanel.add(backgroundImage_jLabel);
        backgroundImage_jLabel.setBounds(0, 0, 760, 470);

        instrument_jPanel.setLayout(null);

        instrumentMain_jPanel.setBackground(new java.awt.Color(166, 206, 229));
        instrumentMain_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, new java.awt.Color(26, 175, 247)));
        instrumentMain_jPanel.setForeground(new java.awt.Color(255, 255, 255));
        instrumentMain_jPanel.setLayout(null);

        instruments_jLabel.setFont(new java.awt.Font("Maiandra GD", 1, 24)); // NOI18N
        instruments_jLabel.setForeground(new java.awt.Color(251, 216, 251));
        instruments_jLabel.setText("Instruments");
        instrumentMain_jPanel.add(instruments_jLabel);
        instruments_jLabel.setBounds(272, 39, 170, 60);

        searchBy_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        searchBy_jLabel.setText("Sort by:");
        instrumentMain_jPanel.add(searchBy_jLabel);
        searchBy_jLabel.setBounds(30, 20, 70, 18);

        instrument_jTable.setBackground(new java.awt.Color(234, 234, 253));
        instrument_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Instrument ID", "Instrument", "Model No.", "Brand", "Price", "Warranty"
            }
        ));
        instrument_jTable.setGridColor(new java.awt.Color(203, 228, 255));
        instrument_jTable.setSelectionBackground(new java.awt.Color(166, 206, 229));
        instrument_jTable.setShowGrid(true);
        instrumentTable_jScrollPane.setViewportView(instrument_jTable);

        instrumentMain_jPanel.add(instrumentTable_jScrollPane);
        instrumentTable_jScrollPane.setBounds(30, 110, 620, 170);

        category_jRadioButton.setBackground(new java.awt.Color(166, 206, 229));
        searchBy_jButton.add(category_jRadioButton);
        category_jRadioButton.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        category_jRadioButton.setText("Category");
        category_jRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_jRadioButtonActionPerformed(evt);
            }
        });
        instrumentMain_jPanel.add(category_jRadioButton);
        category_jRadioButton.setBounds(100, 10, 90, 30);

        categorySearch_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        categorySearch_jLabel.setText(" Category:");
        instrumentMain_jPanel.add(categorySearch_jLabel);
        categorySearch_jLabel.setBounds(480, 10, 70, 40);

        category_jComboBox.setBackground(new java.awt.Color(166, 206, 229));
        category_jComboBox.setFont(new java.awt.Font("Maiandra GD", 0, 11)); // NOI18N
        category_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Drum", "Flute", "Guitar", "Mic", "Piano", "Violin" }));
        instrumentMain_jPanel.add(category_jComboBox);
        category_jComboBox.setBounds(550, 10, 90, 30);

        searchCategory_jButton.setBackground(new java.awt.Color(190, 190, 253));
        searchCategory_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        searchCategory_jButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Category Search.png"))); // NOI18N
        searchCategory_jButton.setText("Search");
        searchCategory_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCategory_jButtonActionPerformed(evt);
            }
        });
        instrumentMain_jPanel.add(searchCategory_jButton);
        searchCategory_jButton.setBounds(550, 50, 90, 30);

        price_jRadioButton.setBackground(new java.awt.Color(166, 206, 229));
        searchBy_jButton.add(price_jRadioButton);
        price_jRadioButton.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        price_jRadioButton.setText("Price");
        price_jRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_jRadioButtonActionPerformed(evt);
            }
        });
        instrumentMain_jPanel.add(price_jRadioButton);
        price_jRadioButton.setBounds(190, 10, 70, 30);

        priceSearch_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        priceSearch_jLabel.setText("Price:");
        instrumentMain_jPanel.add(priceSearch_jLabel);
        priceSearch_jLabel.setBounds(510, 20, 60, 20);
        instrumentMain_jPanel.add(searchPrice_jTextField);
        searchPrice_jTextField.setBounds(550, 10, 90, 30);

        searchPrice_jButton.setBackground(new java.awt.Color(190, 190, 253));
        searchPrice_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        searchPrice_jButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Price Search.png"))); // NOI18N
        searchPrice_jButton.setText("Search");
        searchPrice_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPrice_jButtonActionPerformed(evt);
            }
        });
        instrumentMain_jPanel.add(searchPrice_jButton);
        searchPrice_jButton.setBounds(550, 50, 90, 30);

        instrument_jPanel.add(instrumentMain_jPanel);
        instrumentMain_jPanel.setBounds(27, 137, 680, 300);

        instrumentImage_jPanel.setBackground(new java.awt.Color(204, 204, 255));

        guitar_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Guitar.png"))); // NOI18N

        drums_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Drums.png"))); // NOI18N

        violin_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Violin.png"))); // NOI18N

        mic_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Mic.png"))); // NOI18N

        piano_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Piano.png"))); // NOI18N

        flute_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Flute.png"))); // NOI18N

        javax.swing.GroupLayout instrumentImage_jPanelLayout = new javax.swing.GroupLayout(instrumentImage_jPanel);
        instrumentImage_jPanel.setLayout(instrumentImage_jPanelLayout);
        instrumentImage_jPanelLayout.setHorizontalGroup(
            instrumentImage_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instrumentImage_jPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(guitar_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(drums_jLabel)
                .addGap(9, 9, 9)
                .addComponent(violin_jLabel)
                .addGap(9, 9, 9)
                .addComponent(mic_jLabel)
                .addGap(9, 9, 9)
                .addComponent(piano_jLabel)
                .addGap(9, 9, 9)
                .addComponent(flute_jLabel)
                .addGap(9, 9, 9))
        );
        instrumentImage_jPanelLayout.setVerticalGroup(
            instrumentImage_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instrumentImage_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(instrumentImage_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guitar_jLabel)
                    .addComponent(drums_jLabel)
                    .addComponent(violin_jLabel)
                    .addComponent(mic_jLabel)
                    .addComponent(piano_jLabel)
                    .addComponent(flute_jLabel))
                .addGap(9, 9, 9))
        );

        instrument_jPanel.add(instrumentImage_jPanel);
        instrumentImage_jPanel.setBounds(8, 12, 720, 100);

        back_jButton.setBackground(new java.awt.Color(166, 206, 229));
        back_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        back_jButton.setText("Back");
        back_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_jButtonActionPerformed(evt);
            }
        });
        instrument_jPanel.add(back_jButton);
        back_jButton.setBounds(650, 437, 60, 27);

        instrumentBgImage_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Instrument Wallpaper.png"))); // NOI18N
        instrument_jPanel.add(instrumentBgImage_jLabel);
        instrumentBgImage_jLabel.setBounds(0, 0, 990, 500);

        adminAddInstruments_jPanel.setLayout(null);

        addInstrument_jPanel.setBackground(new java.awt.Color(166, 206, 229));
        addInstrument_jPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.lightGray, new java.awt.Color(26, 175, 247)));
        addInstrument_jPanel.setForeground(new java.awt.Color(255, 255, 255));

        adminInstrument_jLabel.setFont(new java.awt.Font("Maiandra GD", 1, 24)); // NOI18N
        adminInstrument_jLabel.setForeground(new java.awt.Color(251, 216, 251));
        adminInstrument_jLabel.setText("Add Instruments");

        instrumentID_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        instrumentID_jLabel.setText("Instrument ID:");

        instrumentID_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        instrumentID_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        instrument_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        instrument_jLabel.setText("Instrument:");

        instrument_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        instrument_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        modelNo_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        modelNo_jLabel.setText("Model No.:");

        modelNo_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        modelNo_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        warranty_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        warranty_jLabel.setText("Warranty:");

        warranty_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        warranty_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        price_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        price_jLabel.setText("Price:");

        price_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        price_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        brand_jLabel.setFont(new java.awt.Font("Sitka Heading", 0, 14)); // NOI18N
        brand_jLabel.setText("Brand:");

        brand_jTextField.setBackground(new java.awt.Color(233, 233, 254));
        brand_jTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(64, 132, 173)));

        add_jButton.setBackground(new java.awt.Color(190, 190, 253));
        add_jButton.setFont(new java.awt.Font("Book Antiqua", 1, 16)); // NOI18N
        add_jButton.setForeground(new java.awt.Color(51, 120, 156));
        add_jButton.setText("Add");
        add_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_jButtonActionPerformed(evt);
            }
        });

        add_jTable.setBackground(new java.awt.Color(234, 234, 253));
        add_jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Instrument ID", "Instrument", "Model No.", "Brand", "Price", "Warranty"
            }
        ));
        add_jTable.setGridColor(new java.awt.Color(203, 228, 255));
        add_jTable.setSelectionBackground(new java.awt.Color(166, 206, 229));
        add_jTable.setShowGrid(true);
        add_jScrollPane.setViewportView(add_jTable);

        clearAddInstruments_jButton.setBackground(new java.awt.Color(166, 206, 229));
        clearAddInstruments_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        clearAddInstruments_jButton.setText("Clear");
        clearAddInstruments_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearAddInstruments_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addInstrument_jPanelLayout = new javax.swing.GroupLayout(addInstrument_jPanel);
        addInstrument_jPanel.setLayout(addInstrument_jPanelLayout);
        addInstrument_jPanelLayout.setHorizontalGroup(
            addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(add_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(adminInstrument_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addInstrument_jPanelLayout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(add_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearAddInstruments_jButton))
                    .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(modelNo_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(instrumentID_jLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(price_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(price_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(instrumentID_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 144, Short.MAX_VALUE))
                            .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                                .addComponent(modelNo_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instrument_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(warranty_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(brand_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(instrument_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(brand_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(warranty_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );
        addInstrument_jPanelLayout.setVerticalGroup(
            addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addInstrument_jPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(adminInstrument_jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instrument_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instrument_jLabel)
                    .addComponent(instrumentID_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instrumentID_jLabel))
                .addGap(18, 18, 18)
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelNo_jLabel)
                    .addComponent(brand_jLabel)
                    .addComponent(modelNo_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brand_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(price_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(price_jLabel)
                    .addComponent(warranty_jLabel)
                    .addComponent(warranty_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 10, Short.MAX_VALUE)
                .addGroup(addInstrument_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(add_jButton)
                    .addComponent(clearAddInstruments_jButton))
                .addGap(18, 18, 18)
                .addComponent(add_jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        adminAddInstruments_jPanel.add(addInstrument_jPanel);
        addInstrument_jPanel.setBounds(27, 137, 680, 300);

        instrumentImage_jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        addGuitar_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Guitar.png"))); // NOI18N

        addDrums_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Drums.png"))); // NOI18N

        addViolin_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Violin.png"))); // NOI18N

        addMic_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Mic.png"))); // NOI18N

        addPiano_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Piano.png"))); // NOI18N

        addFlute_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Flute.png"))); // NOI18N

        javax.swing.GroupLayout instrumentImage_jPanel1Layout = new javax.swing.GroupLayout(instrumentImage_jPanel1);
        instrumentImage_jPanel1.setLayout(instrumentImage_jPanel1Layout);
        instrumentImage_jPanel1Layout.setHorizontalGroup(
            instrumentImage_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instrumentImage_jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(addGuitar_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(addDrums_jLabel)
                .addGap(9, 9, 9)
                .addComponent(addViolin_jLabel)
                .addGap(9, 9, 9)
                .addComponent(addMic_jLabel)
                .addGap(9, 9, 9)
                .addComponent(addPiano_jLabel)
                .addGap(9, 9, 9)
                .addComponent(addFlute_jLabel)
                .addGap(9, 9, 9))
        );
        instrumentImage_jPanel1Layout.setVerticalGroup(
            instrumentImage_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, instrumentImage_jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(instrumentImage_jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addGuitar_jLabel)
                    .addComponent(addDrums_jLabel)
                    .addComponent(addViolin_jLabel)
                    .addComponent(addMic_jLabel)
                    .addComponent(addPiano_jLabel)
                    .addComponent(addFlute_jLabel))
                .addGap(9, 9, 9))
        );

        adminAddInstruments_jPanel.add(instrumentImage_jPanel1);
        instrumentImage_jPanel1.setBounds(8, 12, 720, 100);

        adminBack_jButton.setBackground(new java.awt.Color(166, 206, 229));
        adminBack_jButton.setFont(new java.awt.Font("Maiandra GD", 0, 12)); // NOI18N
        adminBack_jButton.setText("Back");
        adminBack_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminBack_jButtonActionPerformed(evt);
            }
        });
        adminAddInstruments_jPanel.add(adminBack_jButton);
        adminBack_jButton.setBounds(650, 437, 60, 25);

        addBgImage_jLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Instrument Wallpaper.png"))); // NOI18N
        adminAddInstruments_jPanel.add(addBgImage_jLabel);
        addBgImage_jLabel.setBounds(0, -20, 990, 500);

        fileHelp_jMenuBar.setBackground(new java.awt.Color(216, 216, 254));
        fileHelp_jMenuBar.setMinimumSize(new java.awt.Dimension(100, 25));
        fileHelp_jMenuBar.setPreferredSize(new java.awt.Dimension(100, 27));

        file_jMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/File.png"))); // NOI18N
        file_jMenu.setText("File");
        file_jMenu.setMinimumSize(new java.awt.Dimension(50, 19));
        file_jMenu.setPreferredSize(new java.awt.Dimension(50, 19));

        open_jMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Open Folder.png"))); // NOI18N
        open_jMenu.setText("Open");

        instruments_jMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Open Instruments.png"))); // NOI18N
        instruments_jMenuItem.setText("Import Instruments");
        instruments_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instruments_jMenuItemActionPerformed(evt);
            }
        });
        open_jMenu.add(instruments_jMenuItem);

        external_jMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Import External.png"))); // NOI18N
        external_jMenuItem.setText("Open External Files");
        external_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                external_jMenuItemActionPerformed(evt);
            }
        });
        open_jMenu.add(external_jMenuItem);

        file_jMenu.add(open_jMenu);

        exit_jMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Exit.png"))); // NOI18N
        exit_jMenuItem.setText("Exit");
        exit_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_jMenuItemActionPerformed(evt);
            }
        });
        file_jMenu.add(exit_jMenuItem);

        fileHelp_jMenuBar.add(file_jMenu);

        help_jMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Help.png"))); // NOI18N
        help_jMenu.setText("Help");
        help_jMenu.setMinimumSize(new java.awt.Dimension(60, 19));
        help_jMenu.setPreferredSize(new java.awt.Dimension(69, 19));

        user_jMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/User Manual.png"))); // NOI18N
        user_jMenuItem.setText("User Manual");
        user_jMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_jMenuItemActionPerformed(evt);
            }
        });
        help_jMenu.add(user_jMenuItem);

        fileHelp_jMenuBar.add(help_jMenu);

        setJMenuBar(fileHelp_jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(adminAddInstruments_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(main_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(instrument_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(756, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(main_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(adminAddInstruments_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(instrument_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        main_jPanel.getAccessibleContext().setAccessibleName("");

        getAccessibleContext().setAccessibleDescription("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   
    //Initializing arraylist inventory
    private static ArrayList<MusicalInstrument> inventory = new ArrayList();
    
    /*
     * Method to read the file - Instruments.csv
    */
    private static void readFile() {
        try {
            FileReader fileReader = new FileReader("src/CSV_Files/Instruments.csv");
            BufferedReader csvReader = new BufferedReader(fileReader);
            String row;

            boolean isFirstLine = true;
            //Reading the file and storing the objects in the arraylist.
            while ((row = csvReader.readLine()) != null) {
                //Skip the first line(column title) of the file.
                if (isFirstLine) {
                    isFirstLine = false;
                    continue;
                }
                //Split the rows where commas are present.
                String instrumentList[] = row.split(",");
                
                //Each element of the arraylist is stored in the respective variables.
                int instrumentId = Integer.parseInt(instrumentList[0]);
                String instrumentName = instrumentList[1];
                String modelNum = instrumentList[2];
                String brand = instrumentList[3];
                int price = Integer.parseInt(instrumentList[4]);
                int warranty = Integer.parseInt(instrumentList[5]);
                   
                //Object creation of MusicalInstrument.
                MusicalInstrument musicalInstrument = new MusicalInstrument(instrumentId, instrumentName, modelNum, brand, price, warranty);
                //Adding the objects to the arraylist inventory.
                inventory.add(musicalInstrument);

            }
            fileReader.close();
            csvReader.close();
        } catch (FileNotFoundException e) {
        } catch (IOException e2) {
        } catch (NumberFormatException e3) {
        } catch (ArrayIndexOutOfBoundsException e4) {
        }
    }
    
    /*
     * Checks if the row is empty and displays the instruments in JTable.
    */
    private void displayInstruments() {
        for (MusicalInstrument instrument : inventory) {
            String[] instrumentDetail = {String.valueOf(instrument.getInstrumentId()), instrument.getInstrumentName(), instrument.getmodelNum(), instrument.getBrand(), String.valueOf(instrument.getPrice()), String.valueOf(instrument.getWarranty())};
            int columnCount = instrument_jTable.getColumnCount();
            int rowCount = instrument_jTable.getRowCount();
            int rowIndex = 0;
            boolean rowEmptyChecker = false;
            do {
                //Casting Object as String.
                String value = (String) instrument_jTable.getValueAt(rowIndex, 0);
                //Checking if the row is empty.
                if (value != null && value.length() != 0) {
                    rowIndex++;
                } else {
                    rowEmptyChecker = true;
                }

            } while (rowIndex < rowCount && !rowEmptyChecker);
            
            //Adding data to the JTable
            for (int i = 0; i < columnCount; i++) {
                instrument_jTable.setValueAt(instrumentDetail[i], rowIndex, i);
            }
        }
    }
    
    /*
     * Clears all the data from the JTable.
    */
    public static void clearTable(final JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 0; j < table.getColumnCount(); j++) {
                table.setValueAt("", i, j);
            }
        }
    }
    
    /*
     * Shows the panel to login admin.
    */
    private void admin_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_jButtonActionPerformed
        // Change the visibility of the components according to the requirement.
        loginAdmin_jPanel.setVisible(true);
        users_jPanel.setVisible(false);
        loginMember_jPanel.setVisible(false);
    }//GEN-LAST:event_admin_jButtonActionPerformed

    /*
     * Shows the panel to register new members.
    */
    private void registerMember_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerMember_jButtonActionPerformed
        // Change the visibility of the components according to the requirement.
        main_jPanel.setVisible(true);
        home_jPanel.setVisible(false);
        registerMember_jPanel.setVisible(true);
        instrumentMain_jPanel.setVisible(false);
    }//GEN-LAST:event_registerMember_jButtonActionPerformed

    /*
     * Shows the panel to login member.
    */
    private void member_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_member_jButtonActionPerformed
        // Change the visibility of the components according to the requirement.
        loginAdmin_jPanel.setVisible(false);
        users_jPanel.setVisible(false);
        loginMember_jPanel.setVisible(true);
    }//GEN-LAST:event_member_jButtonActionPerformed

    /*
     * Checks if the username and password of the admin are correct.
     * Allows admin to login.
    */
    private void adminLogin_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLogin_jButtonActionPerformed
        // Change the visibility of the components according to the requirement if the username and password of the admin are correct.
        String enteredUserName = adminName_jTextField.getText();
        String enteredPassword = admin_jPasswordField.getText();
        int count = 0;
        if (enteredUserName.equals("") || enteredPassword.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are filled.");
            count = 1;
        }
        if (count == 0) {
            if (enteredUserName.equals("Admin")) {
                if (enteredPassword.equals("@admin")) {
                    instrumentMain_jPanel.setVisible(false);
                    main_jPanel.setVisible(false);
                    home_jPanel.setVisible(false);
                    registerMember_jPanel.setVisible(false);
                    instrument_jPanel.setVisible(false);
                    addInstrument_jPanel.setVisible(true);
                    adminAddInstruments_jPanel.setVisible(true);
                    adminBack_jButton.setVisible(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Incorrect Password.", "ERROR!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username.", "ERROR!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_adminLogin_jButtonActionPerformed

    /*
     * Checks if the username and password of the member are correct from a hashmap.
     * Allows members to login.
    */
    private void memberLogin_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_memberLogin_jButtonActionPerformed
        // Change the visibility of the components according to the requirement if the username and password of the admin are correct.
        String enteredUserName = memberName_jTextField.getText();
        String enteredPassword = member_jPasswordField.getText();
        int count = 0;
        if (enteredUserName.equals("") || enteredPassword.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are filled.");
            count = 1;
        }
        if (count == 0) {
            if (loginMap.containsKey(enteredUserName)) {
                String storedPassword = loginMap.get(enteredUserName);
                if (enteredPassword.equals(storedPassword)) {
                    instrument_jPanel.setVisible(true);
                    instrumentMain_jPanel.setVisible(true);
                    loginMember_jPanel.setVisible(false);
                    users_jPanel.setVisible(false);
                    main_jPanel.setVisible(false);
                    home_jPanel.setVisible(false);
                    registerMember_jPanel.setVisible(false);
                    back_jButton.setVisible(true);
                    categorySearch_jLabel.setVisible(false);
                    category_jComboBox.setVisible(false);
                    priceSearch_jLabel.setVisible(false);
                    searchPrice_jTextField.setVisible(false);
                    searchCategory_jButton.setVisible(false);
                    searchPrice_jButton.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Invalid Password.", "ERROR!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "User Not Found.", "ERROR!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_memberLogin_jButtonActionPerformed

    /*
     * Returns to the previous panel from the admin panel.
    */
    private void backAdmin_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backAdmin_jButtonActionPerformed
        // Change the visibility and text of the components according to the requirement.
        loginAdmin_jPanel.setVisible(false);
        users_jPanel.setVisible(true);
        adminName_jTextField.setText("");
        admin_jPasswordField.setText("");
    }//GEN-LAST:event_backAdmin_jButtonActionPerformed

    /* 
     * Returns to the previous panel from the member panel.
    */
    private void backMember_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMember_jButtonActionPerformed
        // Change the visibility and text of the components according to the requirement
        loginMember_jPanel.setVisible(false);
        users_jPanel.setVisible(true);
        memberName_jTextField.setText("");
        member_jPasswordField.setText("");
    }//GEN-LAST:event_backMember_jButtonActionPerformed

    /*
     * Returns to the previous panel from the registration panel.
    */
    private void backRegistration_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backRegistration_jButtonActionPerformed
        // Change the visibility of the components according to the requirement
        registerMember_jPanel.setVisible(false);
        home_jPanel.setVisible(true);
        clearTable(memberInfo_jTable);
    }//GEN-LAST:event_backRegistration_jButtonActionPerformed


    private void age_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_age_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_age_jTextFieldActionPerformed

    /*
     * Validates the data entered by the user.
     * Adds the member details entered by the user to the JTable and the file Members.csv
    */
    private void submit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit_jButtonActionPerformed
        // Get the data entered by the user, add to JTable and write to the file Members.csv
        String name = name_jTextField.getText();
        String age = age_jTextField.getText();
        String specialization = specialization_jTextField.getText();
        String username = username_jTextField.getText();
        String password = password_jPasswordField.getText();
        String repassword = repassword_jPasswordField.getText();

        int count = 0;
        if (name.equals("") || specialization.equals("") || age.equals("") || username.equals("") || password.equals("") || repassword.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are filled.");
            count = 1;
        }
        if (count == 0) {
            try {
                Integer.parseInt(this.age_jTextField.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "The age must be an integer number.", "ATTENTION!", JOptionPane.ERROR_MESSAGE);
                count = 1;
            }
        }
        if (count == 0) {
            if (password.equals(repassword)) {
                String[] values = {name, specialization, age, username, password};
                int rowCount = memberInfo_jTable.getRowCount();
                int columnCount = memberInfo_jTable.getColumnCount();
                int rowIndex = 0;
                do {
                    String s = (String) memberInfo_jTable.getValueAt(rowIndex, 0);
                    if (s != null && s.length() != 0) {
                        rowIndex++;
                    } else {
                        break;
                    }
                } while (rowIndex < rowCount);
                for (int i = 0; i < columnCount; i++) {
                    memberInfo_jTable.setValueAt(values[i], rowIndex, i);
                }
                name_jTextField.setText("");
                age_jTextField.setText("");
                specialization_jTextField.setText("");
                username_jTextField.setText("");
                password_jPasswordField.setText("");
                repassword_jPasswordField.setText("");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Incorrect Password. Please re-check!", "ATTENTION!", JOptionPane.ERROR_MESSAGE);
                count = 1;
            }
        }
        if (count == 0){
            JOptionPane.showMessageDialog(rootPane, "Registration is complete.");
        }

        String csvFilename = "src/CSV_Files/Members.csv";
        try {
            FileWriter fw = new FileWriter(csvFilename, true);
            CSVWriter writer = new CSVWriter(fw);
            List<String[]> csvData = new ArrayList<String[]>();
            String[] values = {name, specialization, age, username, password};
            csvData.add(values);

            writer.writeAll(csvData);
            writer.close();

        } catch (Exception e) {
            System.out.println("exception :" + e.getMessage());
        }
    }//GEN-LAST:event_submit_jButtonActionPerformed

    /*
     * Returns to the previous panel.
    */
    private void back_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_jButtonActionPerformed
        // Change the visibility and text of the components according to the requirement.
        // Clear data from the JTable and unselect the radio buttons.
        instrumentMain_jPanel.setVisible(false);
        main_jPanel.setVisible(true);
        home_jPanel.setVisible(true);
        loginMember_jPanel.setVisible(true);
        instrument_jPanel.setVisible(false);
        memberName_jTextField.setText("");
        member_jPasswordField.setText("");
        clearTable(instrument_jTable);
        searchBy_jButton.clearSelection();
    }//GEN-LAST:event_back_jButtonActionPerformed

    /*
     * Sort the data from the file Instruments.csv alphabetically according to the category.
     * Display the sorted data in the JTable.
    */
    private void category_jRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_jRadioButtonActionPerformed
        // Change the visibility of the components according to the requirement and display the required data.
        categorySearch_jLabel.setVisible(true);
        category_jComboBox.setVisible(true);
        priceSearch_jLabel.setVisible(false);
        searchPrice_jTextField.setVisible(false);
        searchCategory_jButton.setVisible(true);
        searchPrice_jButton.setVisible(false);
        clearTable(instrument_jTable);
        inventory.clear();
        readFile();
        MergeSort.mergeSort(inventory, SortBy.CATEGORY);
        displayInstruments();
    }//GEN-LAST:event_category_jRadioButtonActionPerformed

    /*
     * Exit the System.
    */
    private void exit_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_jMenuItemActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_jMenuItemActionPerformed

    /*
     * Return to the previous panel from the admin panel.
    */
    private void adminBack_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminBack_jButtonActionPerformed
        // Change the visibility and text of the components according to the requirement.
        // Clear data from the JTable.
        adminAddInstruments_jPanel.setVisible(false);
        main_jPanel.setVisible(true);
        home_jPanel.setVisible(true);
        loginAdmin_jPanel.setVisible(true);
        addInstrument_jPanel.setVisible(false);
        adminName_jTextField.setText("");
        admin_jPasswordField.setText("");
        clearTable(add_jTable);
    }//GEN-LAST:event_adminBack_jButtonActionPerformed

    /*
     * Validates the data entered by the admin.
     * Add insrument details to the file Instruments.csv
    */
    private void add_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_jButtonActionPerformed
        // Get data entered by the admin and add it to the file Instruments.csv
        String id = instrumentID_jTextField.getText();
        String instrument = instrument_jTextField.getText();
        String model = modelNo_jTextField.getText();
        String brand = brand_jTextField.getText();
        String price = price_jTextField.getText();
        String warranty = warranty_jTextField.getText();
        int count = 0;
        if (id.equals("") || instrument.equals("") || model.equals("") || brand.equals("") || price.equals("") || warranty.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please ensure that all fields are filled.");
            count = 1;
        }
        if (count == 0) {
            try {
                Integer.parseInt(this.price_jTextField.getText());
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(rootPane, "The price must be an integer number.", "ATTENTION!", JOptionPane.ERROR_MESSAGE);
                count = 1;
            }
        }
        if (count == 0) {
            {
                String[] values = {id, instrument, model, brand, price, warranty};
                int rowCount = add_jTable.getRowCount();
                int columnCount = add_jTable.getColumnCount();
                int rowIndex = 0;
                do {
                    String s = (String) add_jTable.getValueAt(rowIndex, 0);
                    if (s != null && s.length() != 0) {
                        rowIndex++;
                    } else {
                        break;
                    }
                } while (rowIndex < rowCount);
                for (int i = 0; i < columnCount; i++) {
                    add_jTable.setValueAt(values[i], rowIndex, i);
                }
                instrumentID_jTextField.setText("");
                instrument_jTextField.setText("");
                modelNo_jTextField.setText("");
                brand_jTextField.setText("");
                price_jTextField.setText("");
                warranty_jTextField.setText("");
            }
            String csvFilename = "src/CSV_Files/Instruments.csv";
            try {
                FileWriter fw = new FileWriter(csvFilename, true);
                CSVWriter writer = new CSVWriter(fw);
                List<String[]> csvData = new ArrayList<String[]>();
                String[] values = {id, instrument, model, brand, price, warranty};
                csvData.add(values);

                writer.writeAll(csvData);
                writer.close();

            } catch (Exception e) {
                System.out.println("exception :" + e.getMessage());
            }
            if (count == 0){
            JOptionPane.showMessageDialog(rootPane, "The instrument has been added.");
            }
        }
    }//GEN-LAST:event_add_jButtonActionPerformed

    /*
     * Sort the data from the file Instruments.csv in ascending order according to the price.
     * Display the sorted data in the JTable.
    */
    private void price_jRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_jRadioButtonActionPerformed
        // Change the visibility of the components according to the requirement and display the required data.
        priceSearch_jLabel.setVisible(true);
        searchPrice_jTextField.setVisible(true);
        categorySearch_jLabel.setVisible(false);
        category_jComboBox.setVisible(false);
        searchCategory_jButton.setVisible(false);
        searchPrice_jButton.setVisible(true);
        clearTable(instrument_jTable);
        inventory.clear();
        readFile();
        MergeSort.mergeSort(inventory, SortBy.PRICE);
        displayInstruments();
    }//GEN-LAST:event_price_jRadioButtonActionPerformed

    /*
     * Clears all data from the text fields of the registration panel.
    */
    private void clearRegistration_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearRegistration_jButtonActionPerformed
        // Set empty strings in the JTextFields.
        name_jTextField.setText("");
        specialization_jTextField.setText("");
        age_jTextField.setText("");
        username_jTextField.setText("");
        password_jPasswordField.setText("");
        repassword_jPasswordField.setText("");
    }//GEN-LAST:event_clearRegistration_jButtonActionPerformed

    /*
     * Clears all data from the text fields of the admin panel.
    */
    private void clearAddInstruments_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearAddInstruments_jButtonActionPerformed
        // Set empty strings in the JTextFields.
        instrumentID_jTextField.setText("");
        instrument_jTextField.setText("");
        modelNo_jTextField.setText("");
        price_jTextField.setText("");
        warranty_jTextField.setText("");
        brand_jTextField.setText("");
    }//GEN-LAST:event_clearAddInstruments_jButtonActionPerformed

    /*
     * Searches the arraylist with the instrument details to find all the instruments selected by the user.
     * Counts the number of instruments of the selected category.
     * Displays the total number of selected instrument with their respective model numbers.
    */
    private void searchCategory_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCategory_jButtonActionPerformed
        // Get the instrument selected by the user from the JComboBox.
        // Search and count the selected instrument.
        String category = (String) category_jComboBox.getSelectedItem();
        int count = 0;
        ArrayList<String> modelNum = new ArrayList();
        for (int i = 0; i <= inventory.size() - 1; i++) {
            if (inventory.get(i).getInstrumentName().equals(category)) {
                modelNum.add(inventory.get(i).getmodelNum());
                count++;
            }
        }
        String modelList = "";
        for (String element : modelNum) {
            modelList = modelList + "\n" + element;
        }
        if(count > 1){
            JOptionPane.showMessageDialog(rootPane, "There are " + count + " " + category + "s with the following model numbers:" + modelList);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "There is " + count + " " + category + " with the following model number: \n" + modelList);
        }
    }//GEN-LAST:event_searchCategory_jButtonActionPerformed

    /*
     * Searches the instrument with the price input by the user.
     * Displays only one instrument with the price in JOptionPane.
    */
    private void searchPrice_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPrice_jButtonActionPerformed
        // Get the price entered by the user.
        // Search and display the details of the instrument with the entered price.
        String price = searchPrice_jTextField.getText();
        int count = 0;
        if (price.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Please ensure that the search category is not void.");
            count = 1;
        } else {
            MusicalInstrument musicalInstrument = BinarySearch.binarySearch(inventory, price);
            if (musicalInstrument != null) {
                JOptionPane.showMessageDialog(rootPane, "Instrument ID: " + musicalInstrument.getInstrumentId() + "\nInstrument Name: " + musicalInstrument.getInstrumentName() + "\nModel Number: " + musicalInstrument.getmodelNum() + "\nBrand: " + musicalInstrument.getBrand() + "\nPrice: Rs " + musicalInstrument.getPrice() + "\nWarranty: " + musicalInstrument.getWarranty());
            } else {
                JOptionPane.showMessageDialog(rootPane, "No such instruments found.");
            }
        }
    }//GEN-LAST:event_searchPrice_jButtonActionPerformed
    
    /*
     * Displays the data from Instuments.csv in the JTable
    */
    private void instruments_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_instruments_jMenuItemActionPerformed
        // Clear the JTable and the arraylist.
        // Read the file Instruments.csv and display the data.
        inventory.clear();
        clearTable(instrument_jTable);
        readFile();
        displayInstruments();
    }//GEN-LAST:event_instruments_jMenuItemActionPerformed

    /*
     * Displays a user manual.
    */
    private void user_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_jMenuItemActionPerformed
        // Path to display the manual.
        try{
            File f = new File("src/User_Manual/User Manual.pdf");
            Desktop desktop= Desktop.getDesktop();
            desktop.open(f);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "The pdf is unavailable");
        }
    }//GEN-LAST:event_user_jMenuItemActionPerformed

    /*
     * Opens any file in the system.
    */
    private void external_jMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_external_jMenuItemActionPerformed
        // Call JFileChooser()
        JFileChooser fileChooser = new JFileChooser("src/CSV_Files");
        fileChooser.setDialogTitle("Choose a file to open");
        int userSelection = fileChooser.showOpenDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.open(fileToOpen);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error.", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
            }
        }
        
    }//GEN-LAST:event_external_jMenuItemActionPerformed

    /**
     * @param args the command line arguments
     */
    //Declaring a HashMap.
    static HashMap<String, String> loginMap;

    /*
     * Main method to call the GUI of the Music Academy.
     * Reads the file Members.csv and stores the username and passwords from the file in the HashMap loginMap.
    */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MusicAcademyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MusicAcademyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MusicAcademyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MusicAcademyInfo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        loginMap = new HashMap<>();
        try {
            FileReader fileReader = new FileReader("src/CSV_Files/Members.csv");
            BufferedReader csvReader = new BufferedReader(fileReader);

            String row;

            boolean isFirstLine = true;
            while ((row = csvReader.readLine()) != null) {
                //skip first line
                if (isFirstLine) {
                    isFirstLine = false;
                    continue;
                }
                String loginDetails[] = row.split(",");
                String userName = loginDetails[3];
                String password = loginDetails[4];
                loginMap.put(userName, password);
            }
            fileReader.close();
            csvReader.close();
        } catch (FileNotFoundException e) {
            System.out.println("File not found");
        } catch (IOException ioe) {
            System.out.println("IO Exception");
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MusicAcademyInfo().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel academyAddress_jlabel;
    private javax.swing.JLabel academyImage_jLabel;
    private javax.swing.JLabel academyName_jlabel;
    private javax.swing.JLabel addBgImage_jLabel;
    private javax.swing.JLabel addDrums_jLabel;
    private javax.swing.JLabel addFlute_jLabel;
    private javax.swing.JLabel addGuitar_jLabel;
    private javax.swing.JPanel addInstrument_jPanel;
    private javax.swing.JLabel addMic_jLabel;
    private javax.swing.JLabel addPiano_jLabel;
    private javax.swing.JLabel addViolin_jLabel;
    private javax.swing.JButton add_jButton;
    private javax.swing.JScrollPane add_jScrollPane;
    private javax.swing.JTable add_jTable;
    private javax.swing.JPanel adminAddInstruments_jPanel;
    private javax.swing.JButton adminBack_jButton;
    private javax.swing.JLabel adminInstrument_jLabel;
    private javax.swing.JButton adminLogin_jButton;
    private javax.swing.JLabel adminName_jLabel;
    private javax.swing.JTextField adminName_jTextField;
    private javax.swing.JLabel adminPassword_jLabel;
    private javax.swing.JButton admin_jButton;
    private javax.swing.JPasswordField admin_jPasswordField;
    private javax.swing.JLabel age_jLabel;
    private javax.swing.JTextField age_jTextField;
    private javax.swing.JButton backAdmin_jButton;
    private javax.swing.JButton backMember_jButton;
    private javax.swing.JButton backRegistration_jButton;
    private javax.swing.JButton back_jButton;
    private javax.swing.JLabel backgroundImage_jLabel;
    private javax.swing.JLabel brand_jLabel;
    private javax.swing.JTextField brand_jTextField;
    private javax.swing.JLabel categorySearch_jLabel;
    private javax.swing.JComboBox<String> category_jComboBox;
    private javax.swing.JRadioButton category_jRadioButton;
    private javax.swing.JButton clearAddInstruments_jButton;
    private javax.swing.JButton clearRegistration_jButton;
    private javax.swing.JTextArea description_jTextArea;
    private javax.swing.JLabel drums_jLabel;
    private javax.swing.JMenuItem exit_jMenuItem;
    private javax.swing.JMenuItem external_jMenuItem;
    private javax.swing.JMenuBar fileHelp_jMenuBar;
    private javax.swing.JMenu file_jMenu;
    private javax.swing.JLabel flute_jLabel;
    private javax.swing.JLabel guitar_jLabel;
    private javax.swing.JMenu help_jMenu;
    private javax.swing.JPanel home_jPanel;
    private javax.swing.JLabel instrumentBgImage_jLabel;
    private javax.swing.JLabel instrumentID_jLabel;
    private javax.swing.JTextField instrumentID_jTextField;
    private javax.swing.JPanel instrumentImage_jPanel;
    private javax.swing.JPanel instrumentImage_jPanel1;
    private javax.swing.JPanel instrumentMain_jPanel;
    private javax.swing.JScrollPane instrumentTable_jScrollPane;
    private javax.swing.JLabel instrument_jLabel;
    private javax.swing.JPanel instrument_jPanel;
    private javax.swing.JTable instrument_jTable;
    private javax.swing.JTextField instrument_jTextField;
    private javax.swing.JLabel instruments_jLabel;
    private javax.swing.JMenuItem instruments_jMenuItem;
    private javax.swing.JPanel loginAdmin_jPanel;
    private javax.swing.JPanel loginMember_jPanel;
    private javax.swing.JPanel main_jPanel;
    private javax.swing.JTable memberInfo_jTable;
    private javax.swing.JButton memberLogin_jButton;
    private javax.swing.JLabel memberName_jLabel;
    private javax.swing.JTextField memberName_jTextField;
    private javax.swing.JLabel memberPassword_jLabel;
    private javax.swing.JButton member_jButton;
    private javax.swing.JPasswordField member_jPasswordField;
    private javax.swing.JLabel mic_jLabel;
    private javax.swing.JLabel modelNo_jLabel;
    private javax.swing.JTextField modelNo_jTextField;
    private javax.swing.JLabel name_jLabel;
    private javax.swing.JTextField name_jTextField;
    private javax.swing.JLabel newAccount_jLabel;
    private javax.swing.JMenu open_jMenu;
    private javax.swing.JLabel password_jLabel;
    private javax.swing.JPasswordField password_jPasswordField;
    private javax.swing.JLabel piano_jLabel;
    private javax.swing.JLabel priceSearch_jLabel;
    private javax.swing.JLabel price_jLabel;
    private javax.swing.JRadioButton price_jRadioButton;
    private javax.swing.JTextField price_jTextField;
    private javax.swing.JLabel rePassword_jLabel;
    private javax.swing.JButton registerMember_jButton;
    private javax.swing.JPanel registerMember_jPanel;
    private javax.swing.JScrollPane registered_jScrollPane;
    private javax.swing.JLabel registration_jLabel;
    private javax.swing.JPasswordField repassword_jPasswordField;
    private javax.swing.ButtonGroup searchBy_jButton;
    private javax.swing.JLabel searchBy_jLabel;
    private javax.swing.JButton searchCategory_jButton;
    private javax.swing.JButton searchPrice_jButton;
    private javax.swing.JTextField searchPrice_jTextField;
    private javax.swing.JLabel specialization_jLabel;
    private javax.swing.JTextField specialization_jTextField;
    private javax.swing.JButton submit_jButton;
    private javax.swing.JMenuItem user_jMenuItem;
    private javax.swing.JLabel username_jLabel;
    private javax.swing.JTextField username_jTextField;
    private javax.swing.JPanel users_jPanel;
    private javax.swing.JLabel violin_jLabel;
    private javax.swing.JLabel warranty_jLabel;
    private javax.swing.JTextField warranty_jTextField;
    // End of variables declaration//GEN-END:variables
}
